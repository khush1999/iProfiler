{"version":3,"sources":["resumes/Resume.pdf","components/iprofiler.png","components/NavigationBar.tsx","pages/Pricing.tsx","components/Message.js","components/Progress.js","pages/Apply.tsx","components/FileUpload.js","components/Applicants.tsx","pages/DashboardPage.tsx","pages/login.svg","pages/Login.tsx","pages/SignUp.tsx","components/Contact.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["Styles","styled","div","NavigationBar","Navbar","expand","fixed","Brand","href","className","src","iprofiler","alt","Toggle","aria-controls","Collapse","id","Nav","to","Link","Pricing","Message","msg","role","type","data-dismiss","aria-label","aria-hidden","Progress","percentage","style","width","Apply","passData","fname","lname","email","phone","ug_University","pg_University","ugDegree","pgDegree","skills1","skills2","skills3","Companies_worked_at","resume_id","console","log","name","split","total_exp","university","degree","skills","useState","show","setShow","handleClose","validated","setValidated","Modal","onHide","Header","closeButton","Title","Body","Footer","Button","variant","onClick","Form","noValidate","action","method","encType","onSubmit","event","form","currentTarget","checkValidity","preventDefault","stopPropagation","Row","Group","as","Col","controlId","Label","Control","placeholder","required","defaultValue","onChange","e","target","value","Feedback","FileUpload","file","setFile","designition","data","setData","filename","setFilename","setUploadedFile","message","setMessage","uploadPercentage","setUploadPercentage","isLoading","setIsLoading","isForm","setIsForm","disableButton","setDisableButton","progressBar","setProgressBar","OnSubmit","a","formData","FormData","append","axios","post","headers","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","setTimeout","res","fileName","filePath","response","status","files","htmlFor","Applicants","setGetResume","Card","backgroundColor","Subtitle","Text","sm","require","DashboardPage","ip","userData","setUserData","Defdata","setDefData","searchTerm","setSearchTerm","isSearched","setIsSearched","DropSkill","setDropSkill","DropExp","setDropExp","DropRole","setDropRole","prevSkill","setPrevSkill","prevExp","setPrevExp","prevDes","setPrevDes","history","useHistory","handleClick","get","push","useEffect","then","fontSize","md","courseType","selected","disabled","hidden","expType","roleType","map","user","filter","city","divColor","mainWidth","marginTop","Login","setEmail","password","setPassword","pwdError","setPwdError","emailError","setEmailError","handleClick1","includes","Container","loginSvg","size","block","SignUp","password1","setPassword1","password2","setPassword2","companyName","setCompanyName","pwdMatchError","setPwdMatchError","column","Contact","window","token","App","exact","path","component","Boolean","location","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"js/main.6da3bf01.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"media/Resume.8356be25.pdf\";","export default __webpack_public_path__ + \"media/iprofiler.e1dba81e.png\";","import React from 'react';\nimport { Nav, Navbar } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport { Route, Switch, BrowserRouter as Router, Link } from 'react-router-dom';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport iprofiler from './iprofiler.png';\n\nconst Styles = styled.div`\n  .navbar {\n    background-color: #FFFFFF;\n  }\n  img {\n    height: 4rem;\n  }\n  a, .navbar-nav .nav-link {\n    color: #000000;\n    &:hover {\n      color: #000000;\n      border-bottom: 3px solid #AE4DFF;\n    }\n  }\n  .navbar-light .navbar-nav .active>.nav-link, .navbar-light .navbar-nav .nav-link.active, \n  .navbar-light .navbar-nav .nav-link.show, .navbar-light .navbar-nav .show>.nav-link {\n    color: #000000;\n    border-bottom: 3px solid #AE4DFF;\n}\n\n.navbar-nav {\n  font-size: 1.3rem;\n  padding-right: 2rem;\n}\n\n.nav-link {\n  padding: 0.5rem 2.5rem;\n}\n\n.brand-border {\n  border-bottom: none;\n}\n.brand-border:hover {\n  border-bottom: none;\n}\n\n.navbar-light .navbar-toggler {\n    color: white;\n    border-color: white;\n    background-color: gray;\n}\n`;\n\nexport const NavigationBar = () => {\n  return (\n    <Styles>\n      <Navbar expand=\"lg\" fixed=\"top\">\n        <Navbar.Brand href=\"/\" className=\"brand-border\">\n          <img src={iprofiler} alt=\"iprofiler\" />\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ml-auto\">\n            <LinkContainer to=\"/Pricing\">\n              <Nav.Link>Pricing</Nav.Link>\n            </LinkContainer>\n            <LinkContainer to=\"/Apply\">\n              <Nav.Link>Apply</Nav.Link>\n            </LinkContainer>\n            <LinkContainer to=\"/Login\">\n              <Nav.Link>Login</Nav.Link>\n            </LinkContainer>\n            <LinkContainer to=\"/Contact\">\n              <Nav.Link>Contact Us</Nav.Link>\n            </LinkContainer>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </Styles >\n  );\n};\n\n","import React from \"react\";\nimport { NavigationBar } from \"../components/NavigationBar\";\nimport './pricing.css';\n\nconst Pricing = () => {\n  return (\n    <>\n      <NavigationBar />\n      <div className=\"pricingTable\">\n      <h2 className=\"pricingTable-title\">Find a plan that's right for you.</h2>\n      <h3 className=\"pricingTable-subtitle\">Every plan comes with a 10-day free trial.</h3>\n      \n      <ul className=\"pricingTable-firstTable\">\n        <li className=\"pricingTable-firstTable_table\">\n          <h1 className=\"pricingTable-firstTable_table__header\">Basic</h1>\n          <p className=\"pricingTable-firstTable_table__pricing\"><span>$</span><span>59</span><span>/Month</span></p>\n          <ul className=\"pricingTable-firstTable_table__options\">\n            <li> All Basic Features </li>\n            <li> 5 Active Job Postings </li>\n            <li> Free Resume Parsing </li>\n          </ul>\n          <div className=\"pricingTable-firstTable_table__getstart\">Get Started Now</div>\n        </li>\n        <li className=\"pricingTable-firstTable_table\">\n        <h1 className=\"pricingTable-firstTable_table__header\">Standard</h1>\n        <p className=\"pricingTable-firstTable_table__pricing\"><span>$</span><span>89</span><span>/Month</span></p>\n        <ul className=\"pricingTable-firstTable_table__options\">\n          <li> All Basic Features </li>\n          <li> 10 Active Job Postings </li>\n          <li> Multi Filtering Option </li>\n          <li> User Friendly Interface </li>\n        </ul>\n        <div className=\"pricingTable-firstTable_table__getstart\">Get Started Now</div>\n        </li>\n        <li className=\"pricingTable-firstTable_table\">\n        <h1 className=\"pricingTable-firstTable_table__header\">Pro</h1>\n        <p className=\"pricingTable-firstTable_table__pricing\"><span>$</span><span>149</span><span>/Month</span></p>\n        <ul className=\"pricingTable-firstTable_table__options\">\n          <li> All Standard Features </li>\n          <li> 20 Active Job Postings </li>\n          <li> Applicant Contact Support </li>\n        </ul>\n        <div className=\"pricingTable-firstTable_table__getstart\">Get Started Now</div>\n      </li>\n    </ul>\n  </div>\n</>\n  );\n}\n\nexport default Pricing;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Message = ({ msg }) => {\n  return (\n    <div className='alert alert-info alert-dismissible fade show mt-5' role='alert'>\n      {msg}\n      <button\n        type='button'\n        className='close'\n        data-dismiss='alert'\n        aria-label='Close'\n      >\n        <span aria-hidden='true'>&times;</span>\n      </button>\n    </div>\n  );\n};\n\nMessage.propTypes = {\n  msg: PropTypes.string.isRequired\n};\n\nexport default Message;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Progress = ({ percentage }) => {\n  return (\n    <div className='progress'>\n      <div\n        className='progress-bar progress-bar-striped bg-success'\n        role='progressbar'\n        style={{ width: `${percentage}%` }}\n      >\n        {percentage}%\n      </div>\n    </div>\n  );\n};\n\nProgress.propTypes = {\n  percentage: PropTypes.number.isRequired\n};\n\nexport default Progress;","import './apply.css';\nimport { Form, Col, Button, Modal } from \"react-bootstrap\";\nimport axios from 'axios';\n\nimport { useState } from 'react';\nimport { NavigationBar } from '../components/NavigationBar';\ninterface IForm {\n    email: string;\n    phone: string;\n    name: string;\n    total_exp: number;\n    university: string[];\n    designition: string[];\n    degree: string[];\n    skills: string[];\n    Companies_worked_at: string[];\n    resume_id: string;\n}\n\ntype TForm = {\n    passData: IForm,\n}\n\nconst Apply = ({ passData }: TForm) => {\n    let fname = \"\", lname = \"\", email = \"\", phone = \"\", total_exp = 0, ug_University = \"\", pg_University = \"\", ugDegree = \"\", pgDegree = \"\", skills1 = \"\", skills2 = \"\", skills3 = \"\", Companies_worked_at = \"\", resume_id = \"\";\n    console.log(\"This is passData ********************\");\n    console.log(passData);\n    \n    if (passData != null) {\n        fname = passData.name.split(\" \")[0];\n        lname = passData.name.split(\" \")[1];\n        email = passData.email;\n        phone = passData.phone;\n        total_exp = passData.total_exp;\n        pg_University = passData.university[0];\n        ug_University = passData.university[1];\n        pgDegree = passData.degree[0];\n        ugDegree = passData.degree[1];\n        skills1 = passData.skills[0];\n        skills2 = passData.skills[1];\n        skills3 = passData.skills[2];\n        resume_id = passData.resume_id;\n    }\n\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const OnSubmit = async (jsondata) => {\n        if (jsondata != null) {\n            try {\n                console.log(jsondata)\n                const res = await axios.post(\"/create\", jsondata,\n                    {\n                        headers: {\n                            \"content_type\": \"application/json\",\n                        },\n                    }\n                );\n\n            }\n            catch (err) {\n                if (err.response.status === 500) {\n                    console.log('There was a problem with the server');\n                } else {\n                    console.log(err.response.data.msg);\n                }\n            }\n\n        }\n    };\n\n    // Form Validation:\n    const [validated, setValidated] = useState(false);\n\n    const handleSubmit1 = (event) => {\n        const form = event.currentTarget;\n        if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        \n        if(form.checkValidity() === true) {\n            handleShow();\n        }\n        setValidated(true);\n    };\n    return (\n        <div className=\"main-form\">\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Modal heading</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Your Application has been submitted !!</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    </Modal.Footer>\n            </Modal>\n            <Form noValidate validated={validated} action=\"/create\" method=\"POST\"\n                encType=\"multipart/form-data\" onSubmit={handleSubmit1}>\n\n                <br></br>\n                <h2>General Details</h2>\n                <br></br>\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridFirstName\">\n                        <Form.Label>First Name</Form.Label>\n                        <Form.Control type=\"text\" id=\"fname\" name=\"fname\" placeholder=\"Enter First Name\" required defaultValue={fname} onChange={(e) => fname = e.target.value} />\n                        <Form.Control.Feedback type=\"invalid\"> Please Enter First Name. </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridLastName\">\n                        <Form.Label>Last Name</Form.Label>\n                        <Form.Control type=\"text\" id=\"lname\" name=\"lname\" placeholder=\"Enter Last Name\" required defaultValue={lname} onChange={(e) => lname = e.target.value} />\n                        <Form.Control.Feedback type=\"invalid\"> Please Enter Last Name. </Form.Control.Feedback>\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridDOB\">\n                        <Form.Label>Select DOB</Form.Label>\n                        <Form.Control type=\"date\" name=\"dob\" id=\"dob\" required placeholder=\"Date of Birth\" />\n                        <Form.Control.Feedback type=\"invalid\"> Please Enter DOB. </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridEmail\">\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control type=\"email\" id=\"email\" name=\"email\" placeholder=\"Enter Email\" required defaultValue={email} onChange={(e) => email = e.target.value} />\n                        <Form.Control.Feedback type=\"invalid\"> Please Enter valid Email. </Form.Control.Feedback>\n                    </Form.Group>\n\n                </Form.Row>\n                \n                <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridAddress\">\n                    <Form.Label>Total Experience </Form.Label>\n                    <Form.Control name=\"total_exp\" id=\"total_exp\" required placeholder=\" Experience in years\" />\n                    <Form.Control.Feedback type=\"invalid\"> Please Enter total experience (in years..) </Form.Control.Feedback>\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridAddress\">\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control name=\"address\" id=\"address\" placeholder=\"1234 Main St\" />\n                </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridCity\">\n                        <Form.Label>City</Form.Label>\n                        <Form.Control name=\"city\" id=\"city\" required placeholder=\"Enter City\" />\n                        <Form.Control.Feedback type=\"invalid\"> Please Enter your current location. </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridState\">\n                        <Form.Label>State</Form.Label>\n                        <Form.Control name=\"state\" id=\"state\" required placeholder=\"Enter State\">\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridZip\">\n                        <Form.Label>Zip</Form.Label>\n                        <Form.Control name=\"zip\" id=\"zip\" required placeholder=\"Enter 6 digit pincode\" />\n                    </Form.Group>\n\n                </Form.Row>\n\n                <Form.Row>\n\n                    <Form.Group as={Col} controlId=\"formGridPhone1\">\n                        <Form.Label>Contact Number</Form.Label>\n                        <Form.Control id=\"phone1\" name=\"phone1\" required placeholder=\"eg:- 932154XXXX\" defaultValue={phone} onChange={(e) => phone = e.target.value} />\n                        <Form.Control.Feedback type=\"invalid\"> Please Enter phone no. </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"Phone2\">\n                        <Form.Label>Alternate Contact Number</Form.Label>\n                        <Form.Control id=\"phone2\" name=\"phone2\" placeholder=\"eg:- 932154XXXX\" />\n                    </Form.Group>\n\n                </Form.Row>\n\n                <Form.Group controlId=\"formGridSkillDes\">\n                    <Form.Label>Designation</Form.Label>\n                    <Form.Control id =\"desig\" name=\"desig\" required type=\"text\" placeholder=\"Write Designation applying for\" />\n                    <Form.Control.Feedback type=\"invalid\"> Please Enter Post applying for. </Form.Control.Feedback>\n                </Form.Group>\n\n                <br></br>\n                <h2>Educational Details</h2>\n                <br></br>\n\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridPostGraduation\">\n                        <Form.Label>Post Graduation Course</Form.Label>\n                        <Form.Control type=\"text\" id=\"pgDegree\" name=\"pgDegree\" placeholder=\"Enter PG Course\" defaultValue={pgDegree} onChange={(e) => pgDegree = e.target.value} />\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridPGCollege\">\n                        <Form.Label>College</Form.Label>\n                        <Form.Control type=\"text\" id=\"pg_University\" name=\"pg_University\" placeholder=\"Enter PG College\" defaultValue={pg_University} onChange={(e) => pg_University = e.target.value} />\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridPGPercentage\">\n                        <Form.Label>Percentage</Form.Label>\n                        <Form.Control type=\"text\" id=\"pgPercentage\" name=\"pgPercentage\" placeholder=\"Enter PG Percentage\" />\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridUnderGraduation\">\n                        <Form.Label>Under Graduation Course</Form.Label>\n                        <Form.Control type=\"text\" id=\"ugDegree\" required name=\"ugDegree\" placeholder=\"Enter UG Course\" defaultValue={ugDegree} onChange={(e) => ugDegree = e.target.value} />\n                        <Form.Control.Feedback type=\"invalid\"> Please Enter valid degree. </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridPGCollege\">\n                        <Form.Label>College</Form.Label>\n                        <Form.Control id=\"ug_University\" required name=\"ug_University\" type=\"text\" placeholder=\"Enter UG College\" defaultValue={ug_University} onChange={(e) => ug_University = e.target.value} />\n                        <Form.Control.Feedback type=\"invalid\"> Please Enter your university. </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridPGPercentage\">\n                        <Form.Label>Percentage</Form.Label>\n                        <Form.Control id=\"ugPercentage\" name=\"ugPercentage\" required type=\"text\" placeholder=\"Enter UG Percentage\" />\n                        <Form.Control.Feedback type=\"invalid\"> Please Enter your Percentage. </Form.Control.Feedback>\n                    </Form.Group>\n                </Form.Row>\n\n                <br></br>\n                <h2>Job Skills</h2>\n                <br></br>\n\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridSkill1\">\n                        <Form.Label>Skill 1</Form.Label>\n                        <Form.Control type=\"text\" id=\"skills1\" required name=\"skills1\" placeholder=\"Enter Skill\" defaultValue={skills1} onChange={(e) => skills1 = e.target.value} />\n                        <Form.Control.Feedback type=\"invalid\"> Mention your skill </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridSkill2\">\n                        <Form.Label>Skill 2</Form.Label>\n                        <Form.Control type=\"text\" id=\"skills2\" required name=\"skills2\" placeholder=\"Enter Skill\" defaultValue={skills2} onChange={(e) => skills2 = e.target.value} />\n                        <Form.Control.Feedback type=\"invalid\"> Mention your skill </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridSkill3\">\n                        <Form.Label>Skill 3</Form.Label>\n                        <Form.Control type=\"text\" id=\"skills3\" required name=\"skills3\" placeholder=\"Enter Skill\" defaultValue={skills3} onChange={(e) => skills3 = e.target.value} />\n                        <Form.Control.Feedback type=\"invalid\"> Mention your skill </Form.Control.Feedback>\n                    </Form.Group>\n                </Form.Row>\n                \n                <Form.Group as={Col} controlId=\"formGridResume\">\n                        <Form.Label> Previous Company </Form.Label>\n                        <Form.Control type=\"text\" id=\"Companies_worked_at\" required name=\"Companies_worked_at\" defaultValue={Companies_worked_at} onChange={(e) => Companies_worked_at = e.target.value}/>\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridResume\">\n                        <Form.Label> Resume Name</Form.Label>\n                        <Form.Control type=\"text\" id=\"resume_id\" required name=\"resume_id\" defaultValue={resume_id} onChange={(e) => resume_id = e.target.value} />\n                </Form.Group>\n\n                <input type='submit' value='Submit' className='btn btn-primary btn-block mt-4 mb-4' />\n            </Form>\n        </div>\n    );\n}\n\nexport default Apply;","import React, { Fragment, useState, useEffect } from \"react\";\nimport Message from \"./Message\";\nimport Progress from \"./Progress\";\nimport axios from \"axios\";\nimport Apply from \"../pages/Apply\";\nimport \"./fileUpload.css\";\nimport { NavigationBar } from \"./NavigationBar\";\n\nconst FileUpload = () => {\n  const ip = {\n    email: \"\",\n    phone: \"\",\n    name: \"\",\n    total_exp: 0,\n    university: [],\n    designition: \"\",\n    degree: [],\n    skills: [],\n    Companies_worked_at: [],\n    resume_id: \"\",\n  };\n  const [file, setFile] = useState(\"\");\n  const [data, setData] = useState(ip);\n  const [filename, setFilename] = useState(\"Choose File\");\n  const [uploadedFile, setUploadedFile] = useState({});\n  const [message, setMessage] = useState(\"\");\n  const [uploadPercentage, setUploadPercentage] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isForm, setIsForm] = useState(false);\n  const [disableButton, setDisableButton] = useState(true);\n  const [progressBar, setProgressBar] = useState(true);\n\n  const onChange = (e) => {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name);\n    setDisableButton(!disableButton)\n  };\n\n  let form;\n\n  const FormDisplay = () => {\n    setIsLoading(true);\n    setTimeout(() => {\n      setIsForm(true);\n      setIsLoading(false);\n    }, 5000);\n  }\n\n  const OnSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const res = await axios.post(\"/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n        onUploadProgress: (progressEvent) => {\n          setUploadPercentage(\n            parseInt(\n              Math.round((progressEvent.loaded * 100) / progressEvent.total)\n            )\n          );\n\n          // Clear percentage\n          setTimeout(() => setProgressBar(!progressBar), 10000);\n        },\n      });\n\n      const { fileName, filePath } = res.data;\n\n      setUploadedFile({ fileName, filePath });\n      setData(res.data);\n      setMessage(\"File Uploaded\");\n    } catch (err) {\n      if (err.response.status === 500) {\n        setMessage(\"There was a problem with the server\");\n      } else {\n        setMessage(err.response.data.msg);\n      }\n    }\n    FormDisplay();\n  };\n\n  return (\n    <Fragment>\n      <NavigationBar />\n      {message ? <Message msg={message} /> : null}\n      <form onSubmit={OnSubmit} className=\"form-upload ml-5 mr-5\">\n        <h2>Resume Upload</h2>\n        <div className=\"custom-file mb-4\">\n          <br></br>\n          <input\n            type=\"file\"\n            className=\"custom-file-input\"\n            id=\"customFile\"\n            onChange={onChange} required\n          />\n          <label className=\"custom-file-label\" htmlFor=\"customFile\">\n            {filename}\n          </label>\n        </div>\n\n      { progressBar && <Progress percentage={uploadPercentage} /> }\n\n      { !disableButton && <input\n          type=\"submit\"\n          value=\"Upload\"\n          className=\"btn btn-primary btn-block mt-4\"\n      /> }\n      </form>\n      {console.log(\"Value is =\", data)}\n      {isLoading ? <div className=\"load\"><img src=\"https://media.giphy.com/media/y1ZBcOGOOtlpC/giphy.gif\" /></div> : \" \"}\n      {isForm ? <Apply passData={data} /> : \" \"}\n    </Fragment>\n  );\n};\n\nexport default FileUpload;\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { Card, Button, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\ninterface IForm {\n  email: string;\n  phone1: string;\n  phone2: string;\n  fname: string;\n  lname: string;\n  total_exp: number;\n  designition: string;\n  pgDegree: string;\n  ugDegree: string;\n  pg_University: string;\n  ug_University: string;\n  ugPercentage: string;\n  pgPercentage: string;\n  skills1: string;\n  skills2: string;\n  skills3: string;\n  Companies_worked_at: string;\n  address: string;\n  dob: string;\n  city: string;\n  state: string;\n  zip: string;\n  resume_id: string;\n}\n\ntype TForm = {\n  passData: IForm,\n}\n\nconst Applicants = ({ passData }: TForm) => {  \n\n  // const [getResume, setGetResume] = useState('');\n  let setGetResume;\n  if(passData != null) {\n    setGetResume = passData.resume_id;\n  }\n  \n  console.log(\"&&&&&&&&&&&&&&&&&&&&&&&&&&&\");\n  console.log(setGetResume);\n  // function handleResume() {\n  //   console.log(\"&&&&&&&&&&&&&&&&&&&&&&&&&&&\");\n  //   console.log(passData.resume_id);\n  //   axios.get('/upload/', {\n  //     params: {\n  //       path: setGetResume\n  //     }\n  //   })\n  //   .then(function (response) {\n  //     console.log(response);\n  //   })\n  // }\n  return (\n    <Card style={{ width: '18rem', backgroundColor: \"#f8f8ff\" }} className=\"shadow p-3 mb-5 \n    bg-white rounded\">\n      <Card.Body>\n        <Card.Title className=\"text-left\">{passData.fname}{\" \"}{passData.lname}</Card.Title>\n        <hr />\n        <Card.Subtitle className=\"mb-2 text-muted\">{passData.ugDegree}{\" \"}{passData.pgDegree}\n        </Card.Subtitle>\n        <Card.Text className=\"text-left\">\n          <h6>Total Experience: {passData.total_exp}</h6>\n          <h6>Skills:</h6>\n          <ul>\n            <li>{passData.skills1}</li>\n            <li>{passData.skills2}</li>\n            <li>{passData.skills3}</li>\n          </ul>\n        </Card.Text>\n        <Row>\n          <Col sm={6}>\n            <Button variant=\"primary align-self-end\">View Profile</Button>\n          </Col>\n          <Col sm={6}>\n            {/* <Button variant=\"primary align-self-end\" onClick = {handleResume}>View Resume</Button> */}\n            {/* <Link to={`../resumes/${setGetResume}`} target=\"_blank\" download> Download</Link> */}\n            <a href={require('../resumes/Resume.pdf')} target=\"_blank\">Download Pdf</a>\n          </Col>\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Applicants;\n\n","import Applicant from '../components/Applicants';\nimport { Row, Col, Dropdown, Nav } from 'react-bootstrap';\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport './DashboardPage.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport { Link, useHistory } from 'react-router-dom';\nimport iprofiler from '../components/iprofiler.png';\n\ninterface IForm {\n    email: string;\n    phone1: string;\n    phone2: string;\n    fname: string;\n    lname: string;\n    total_exp: number;\n    designition: string;\n    pgDegree: string;\n    ugDegree: string;\n    pg_University: string;\n    ug_University: string;\n    ugPercentage: string;\n    pgPercentage: string;\n    skills1: string;\n    skills2: string;\n    skills3: string;\n    Companies_worked_at: string;\n    address: string;\n    dob: string;\n    city: string;\n    state: string;\n    zip: string;\n    resume_id: string;\n}\n\nconst DashboardPage = () => {\n\n    const ip = {\n        \"email\": \"\", \"phone1\": \"\", \"phone2\": \"\", \"fname\": \"\", \"lname\": \"\", \"dob\": \"\",\n        \"total_exp\": 0, \"ug_University\": \"\", \"pg_University\": \"\",\n        \"designition\": \"\", \"ugDegree\": \"\", \"pgDegree\": \"\", \"pgPercentage\": \"\", \"ugPercentage\": \"\",\n        \"skills1\": \"\", \"skills2\": \"\", \"skills3\": \"\",\n        \"Companies_worked_at\": \"\", \"address\": \"\", \"city\": \"\", \"state\": \"\", \"zip\": \"\", \"resume_id\": \"\"\n    }\n\n    const [userData, setUserData] = useState(false);\n    const [data, setData] = useState([ip]);\n    const [Defdata, setDefData] = useState([ip]);    \n    const [searchTerm, setSearchTerm] = useState('');\n    const [isSearched, setIsSearched] = useState(false);\n    const [message, setMessage] = useState('');\n    const [DropSkill,setDropSkill] = useState('');\n    const [DropExp,setDropExp] = useState('');\n    const [DropRole,setDropRole] = useState('');\n    const [prevSkill, setPrevSkill] = useState('');\n    const [prevExp, setPrevExp] = useState('');\n    const [prevDes, setPrevDes] = useState('');\n    var exp, exp1;\n    \n\n    const history = useHistory();\n\n    function GetData() {\n\n        useEffect(() => {\n            if (userData == false) {\n                axios.get(\"/getData\")\n                    .then(res => {\n                        console.log(\"////////////////////////////////////\", res.data);\n                        setData(res.data);\n                        setDefData(res.data);\n\n                        setUserData(true);\n                    })\n            }\n            else {\n                setIsSearched(!setIsSearched)\n            }\n        }, [data]);\n\n    }\n    const handleClick = async (e) => {\n        e.preventDefault();\n        // const formData = new FormData();\n        // formData.append(\"email\", email);\n        // formData.append(\"password\", password);\n        try {\n            const res = await axios.get('/logout');\n            console.log(\"$$$$$$$$$$$$$$$$$$$$$$\")\n            console.log(res.data);\n            if (res.data === \"EmailID\") {\n                history.push('/Login');\n            }\n\n        } catch (err) {\n            if (err.response.status == 500) {\n                setMessage(\"There was a problem with the server\");\n            } else {\n                setMessage(err.response.data.msg);\n            }\n        }\n\n    }\n    //fine\n    const Courses = (courseType: string) => {\n        if ((prevSkill != courseType || courseType===\"All\")&&(prevExp===\"\")&&(prevDes===\"\") ){\n            setData(Defdata)\n        }\n        setDropSkill(courseType);\n        setPrevSkill(courseType);\n        // setSkillData(data)\n    }\n\n    //fine\n    const Experience = (expType: string) => {\n        if ((prevExp!= expType|| expType===\"All\")&&(prevExp===\"\")&&(prevDes===\"\") )\n        {\n            setData(Defdata)\n        }\n        setDropExp(expType);\n        setPrevExp(expType)\n    }\n\n\n    const Role = (roleType: string) => {\n    if ((prevDes!= roleType || roleType===\"All\")&&(prevExp===\"\")&&(prevDes===\"\") )\n        {\n            setData(Defdata)\n        }\n        setDropRole(roleType);\n        setPrevDes(roleType);\n    }\n\n    return (\n        <>\n            {GetData()}\n            <div className=\"main-dashboard\">\n                <div className=\"sidebar\">\n                    <div>\n                        <img src={iprofiler} alt=\"iprofiler\"/>\n                    </div>\n                    <a href=\"/\"><i className=\"fa fa-fw fa-home pr-2\" style={{ fontSize: '1.75em' }} />\n                    Home</a>\n                    <a className=\"active\" href=\"#\"><i className=\"fa fa-fw fa-user pr-2\"\n                        style={{ fontSize: '1.75em' }} />\n                        Applicants</a>\n                    <a href=\"#\"><i className=\"fa fa-fw fa-briefcase pr-2\" style={{ fontSize: '1.75em' }} />\n                    Job Postings</a>\n                    <a href=\"#\" onClick={handleClick}><i className=\"fa fa-fw fa-power-off pr-2\" style={{ fontSize: '1.75em' }} />\n                    Logout</a>\n                </div>\n\n                <div className=\"content\">\n\n                    <h4 className=\"display-applicant\">Displaying Applicants</h4>\n\n                    <div className=\"filter\">\n                        <Row className=\"filter-row\">\n                            <Col md={6} className=\"dashboard-filters\">                               \n                            <div className=\"select\">\n                                    <select onChange={(e) => Courses(e.target.value)}>\n                                    <option value=\"none\" selected disabled hidden>Skills</option>\n                                        <option value=\"All\">All</option>\n                                        <option value=\"Java\">Java</option>\n                                        <option value=\"Python\">Python</option>\n                                        <option value=\"Django\">Django</option>\n                                        <option value=\"C\">C/C++</option>\n                                        <option value=\"React\">React</option>\n                                        <option value=\"Javascript\">Javascript</option>\n                                    </select>\n                                    </div>\n                                \n                                    \n                                <div className=\"select\">\n                                <select onChange={(e) => Experience(e.target.value)}>\n                                    <option value=\"none\" selected disabled hidden>Experience</option>\n                                    <option value=\"All\">All</option>\n                                    <option  value=\"0-3 Years\">0-3 Years</option>\n                                    <option value=\"3-6 Years\">3-6 Years</option>\n                                    <option  value=\"6-9 Years\">6-9 Years</option>\n                                    <option  value=\">9 Years\">{\">\"}9 Years</option>\n                                </select>\n                                </div>\n                            \n                                    \n                                \n                                <div className=\"select\">\n                                <select onChange={(e) => Role(e.target.value)}>\n                                <option value=\"none\" selected disabled hidden>Designation</option>\n                                    <option value=\"All\">All</option>\n                                    <option value=\"SDE\">SDE</option>\n                                    <option value=\"SDET\">SDET</option>\n                                    <option value=\"HR\">HR</option>\n                                    <option value=\"DevOps\">DevOps</option>\n                                </select>\n                                </div>\n                            </Col>\n                            <Col md={6} className=\"pr-0\">\n                                <div className=\"search mr-0\">\n                                    <input type=\"search\" name=\"search\" id=\"\" placeholder=\"Search Applicant by Name\"\n                                        className=\"search-input\" onChange={(e) => {\n                                            setIsSearched(!isSearched);\n                                            setSearchTerm(e.target.value)\n                                        }} />\n                                </div>\n                            </Col>\n                        </Row>\n                    </div>\n\n                <div className=\"grid-container justify-content-around\">\n                        {!isSearched &&  (DropSkill===\"\") && userData && data.map(user =>\n                            <Applicant passData={user} />\n                        )}\n\n                    {\n                        userData && isSearched && data.filter(user => (user.fname == searchTerm ||\n                            user.lname == searchTerm || user.city == searchTerm || user.designition\n                            == searchTerm)).map((user) => (\n                                <Applicant passData={user} />\n                            ))\n                    }\n\n                    {\n                        (DropSkill != \"\") && data.filter(user => (user.skills1 == DropSkill ||\n                        user.skills2 == DropSkill || user.skills3 == DropSkill)).map((user) => ( \n                            <Applicant passData={user} />\n                            ))\n                    }\n    \n                        {(DropExp!=\"\") && data.filter(user => (DropExp==\"0-3 Years\" ? \n                        user.total_exp<=3:(DropExp==\"3-6 Years\" ? \n                        (user.total_exp>3 && user.total_exp<=6):(DropExp==\"6-9 Years\" ? (user.total_exp>6 && user.total_exp<=9) :(user.total_exp>9))))).map((user) => (\n                            <Applicant passData={user} />\n                        ))}\n                \n                    {\n                        (DropRole!=\"\") && data.filter(user => (user.designition=== DropRole)).map((user) => (\n                            <Applicant passData={user} />\n                        ))\n                    }\n\n                    {\n                    userData && isSearched && data.filter(user => (user.fname == searchTerm ||\n                        user.lname == searchTerm || user.city == searchTerm || user.designition\n                        == searchTerm)).map((user) => (\n                            <Applicant passData={user} />\n                        ))\n                    }\n                </div>\n            </div>\n            </div>\n        </>\n    );\n};\n\nexport default DashboardPage;","export default __webpack_public_path__ + \"media/login.bdd13956.svg\";","import axios from 'axios';\nimport React, { useState } from 'react';\nimport { Button, Container, Row, Col, Form } from 'react-bootstrap';\nimport { Link, useHistory } from 'react-router-dom';\nimport { NavigationBar } from '../components/NavigationBar';\nimport loginSvg from './login.svg';\nimport './login.css';\n\n\nconst divColor = { backgroundColor: '#AE4DFF' };\nconst mainWidth = { width: \"60%\", marginTop: \"10rem\" };\nexport const Login = () => {\n\n    const [email, setEmail] = useState('Email');\n    const [password, setPassword] = useState('Password');\n    const [message, setMessage] = useState('');\n    const [pwdError, setPwdError] = useState('');\n    const [emailError, setEmailError] = useState('');\n    const history = useHistory();\n    const handleClick = () => history.push('/Pricing');\n    const handleClick1 = async (e) => {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append(\"email\", email);\n        formData.append(\"password\", password);\n        try {\n            const res = await axios.post(\"/login\", formData, {\n                headers: {\n                    \"Content-Type\": \"multipart/form-data\",\n                }\n            });\n            console.log(\"*****************************\")\n            console.log(res.data);\n            if (res.data.includes('@gmail.com')) {\n                history.push('/DashboardPage');\n            }\n            else if (res.data === \"Wrong password\") {\n                setPwdError(\"You entered wrong password!!\");\n            }\n\n            else if(res.data === \"Email not found\") {\n                setEmailError(\"You entered wrong Email!!\");\n            }\n        } catch (err) {\n            if (err.response.status === 500) {\n                setMessage(\"There was a problem with the server\");\n            } else {\n                setMessage(err.response.data.msg);\n            }\n        }\n    }\n    \n    return (\n        <>\n            <NavigationBar />\n            <Container style={mainWidth} className=\"text-center shadow-sm mb-5 bg-white rounde\">\n                <Row>\n                    <Col sm={5} style={divColor} className=\"text-white font-weight-bold p-3\">\n                        <div>\n                            <h3>Best Hiring Platform</h3>\n                        </div>\n                        <img src= {loginSvg} alt=\"logo\"/>                        \n                        <div>\n                            <p>Reduce Your Hiring Cost With Us !</p>\n                            <p>Choose Your Plan & Start Hiring Now</p>\n                            <Button variant=\"dark\" onClick={handleClick}>Buy Now {'>>'}</Button> {' '}\n                        </div>\n                    </Col>\n                    <Col sm={7} className=\"bg-light text-dark parent\">\n                    <div className=\"child\">\n                        <h2 className=\"mb-4 font-weight-bold\">Employer Login</h2>\n                        <Form action=\"/login\" method=\"POST\">\n                            <Form.Group controlId=\"loginEmail\">\n                                <Form.Control type=\"email\" id=\"email\" name=\"email\" required placeholder={email} onChange={(e) => setEmail(e.target.value)} />\n                                <div className=\"text-danger\">\n                                    {emailError}\n                                </div>\n                            </Form.Group>\n                            <Form.Group controlId=\"loginPassword\">\n                                <Form.Control type=\"password\" id=\"password\" name=\"password\" required placeholder={password} onChange={(e) => setPassword(e.target.value)} />\n                                <div className=\"text-danger\">\n                                    {pwdError}\n                                </div>\n                            </Form.Group>\n\n                            <Button variant=\"dark\" size=\"lg\" block type=\"submit\" onClick={handleClick1}>\n                                Login\n                            </Button>\n                        </Form>\n                       \n                        <hr />\n                        <p>New Client ?{\" \"}<Link to=\"/SignUp\">Sign Up</Link></p>\n                        </div>\n                    </Col>\n                </Row>\n            </Container>\n        </>\n    );\n}\n\n","import axios from 'axios';\nimport React, { useState } from 'react';\nimport { Button, Container, Row, Col, Form } from 'react-bootstrap';\nimport { Link, useHistory } from 'react-router-dom';\nimport { NavigationBar } from '../components/NavigationBar';\n\nconst mainWidth = { width: \"60%\", marginTop: \"10rem\" };\n\nexport const SignUp = () => {\n    const [email, setEmail] = useState('')\n    const [password1, setPassword1] = useState('')\n    const [password2, setPassword2] = useState('')\n    const [companyName, setCompanyName] = useState('')\n    const [message, setMessage] = useState('')\n    const [emailError, setEmailError] = useState('')\n    const [pwdMatchError, setPwdMatchError] = useState('')\n\n    const history = useHistory();\n\n    const handleClick = async (e) => {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append(\"email\", email);\n        formData.append(\"password1\", password1);\n        formData.append(\"password2\", password2);\n        formData.append(\"company_name\", companyName);\n\n        try {\n            const res = await axios.post(\"/auth\", formData, {\n                headers: {\n                    \"Content-Type\": \"multipart/form-data\",\n                }\n            });\n            console.log(\"^^^^^^^^^^^^^^^^^^^\")\n            console.log(res.data);\n            if (res.data === \"You are Logged in!!!!\") {\n                history.push('/Login');\n            }\n\n            else if(res.data === \"This email already exists in database\") {\n                setEmailError(\"Email Id already exist!\");\n            }\n\n            else if(res.data === \"Passwords should match!\") {\n                setPwdMatchError(\"Passwords should match!\");\n            }\n\n        } catch (err) {\n            if (err.response.status == 500) {\n                setMessage(\"There was a problem with the server\");\n            } else {\n                setMessage(err.response.data.msg);\n            }\n        }\n    }\n    return (\n        <>\n            <NavigationBar />\n            <Container style={mainWidth} className=\"bg-light text-dark shadow-sm p-3 mb-5 bg-white rounde\">\n                <h3 className=\"text-center\">Join Us To Hire !</h3>\n                <br />\n                <Form action=\"/auth\" method=\"POST\">\n                    <Form.Group as={Row} controlId=\"SignUpEmail\">\n                        <Form.Label column sm={4}>\n                            Company Name\n                    </Form.Label>\n                        <Col sm={8}>\n                            <Form.Control type=\"text\" required placeholder={companyName} id=\"company_name\" name=\"company_name\" onChange={(e) => setCompanyName(e.target.value)} />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"SignUpEmail\">\n                        <Form.Label column sm={4}>\n                            Company Email\n                    </Form.Label>\n                        <Col sm={8}>\n                            <Form.Control type=\"email\" required placeholder={email} id=\"email\" name=\"email\" onChange={(e) => setEmail(e.target.value)} />\n                            <div className=\"text-danger\">\n                                {emailError} \n                            </div>\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} controlId=\"formHorizontalPassword\">\n                        <Form.Label column sm={4}>\n                            Password\n                    </Form.Label>\n                        <Col sm={8}>\n                            <Form.Control type=\"password\" required placeholder={password1} id=\"password1\" name=\"password1\" onChange={(e) => setPassword1(e.target.value)} />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} controlId=\"formHorizontalPassword\">\n                        <Form.Label column sm={4}>\n                            Confirm Password\n                    </Form.Label>\n                        <Col sm={8}>\n                            <Form.Control type=\"password\" required placeholder={password2} id=\"password2\" name=\"password2\" onChange={(e) => setPassword2(e.target.value)} />\n                            <div className=\"text-danger\">\n                                {pwdMatchError}\n                            </div>\n                        </Col>\n                    </Form.Group>\n                    {/* <input type='submit' value='Submit' className='btn btn-primary btn-block mt-4'/> */}\n                    <div className=\"\">\n                        <Button variant=\"primary\" size=\"lg\" block type=\"submit\" onClick={handleClick}> Create Account </Button>\n                    </div>\n                </Form>\n                <br />\n                <hr />\n                <p className=\"text-center\">Already a User ?{\" \"}<Link to=\"/Login\">Login Now</Link></p>\n            </Container>\n        </>\n    )\n};\n","import React from 'react'\nimport './contact.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport { NavigationBar } from './NavigationBar';\n\nexport default function Contact() {\n    return (\n        <>\n        <NavigationBar />\n        <div className=\"margins\">\n            <section className=\"contact-page-sec\">\n            <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-4\">\n                <div className=\"contact-info\">\n                    <div className=\"contact-info-item\">\n                    <div className=\"contact-info-icon\">\n                        <i className=\"fa fa-map-marker\"></i>\n                </div>\n                <div className=\"contact-info-text\">\n                    <h2>address</h2>\n                    <span>1215 Ring Road, iProfiler </span> \n                    <span>Banglore , INDIA</span> \n                </div>\n                </div>            \n            </div>          \n            </div>          \n            <div className=\"col-md-4\">\n            <div className=\"contact-info\">\n                <div className=\"contact-info-item\">\n                <div className=\"contact-info-icon\">\n                    <i className=\"fa fa-envelope\"></i>\n                </div>\n                <div className=\"contact-info-text\">\n                    <h2>E-mail us at </h2>\n                    <span>info@iprofiler.com</span> \n                    <span>queries@iprofiler.com</span>\n                </div>\n                </div>            \n            </div>                \n            </div>                \n            <div className=\"col-md-4\">\n            <div className=\"contact-info\">\n                <div className=\"contact-info-item\">\n                <div className=\"contact-info-icon\">\n                    <i className=\"fa fa-clock-o\"></i>\n                </div>\n                <div className=\"contact-info-text\">\n                    <h2> Office working hours </h2>\n                    <span> Mon - Thu  10:00 am - 7.00 pm</span>\n                    <span> Fri - Sat  11.00 am - 5.00 pm</span>\n                </div>\n                </div>            \n            </div>          \n            </div>          \n        </div>\n        <div className=\"row\">\n            <div className=\"col-md-8\">\n            <div className=\"contact-page-form\">\n                <h2>Get in Touch</h2> \n                <form action=\"contact-mail.php\" method=\"post\">\n                <div className=\"row\">\n                <div className=\"col-md-6 col-sm-6 col-xs-12\">\n                    <div className=\"single-input-field\">\n                    <input type=\"text\" placeholder=\"Your Name\" name=\"name\"/>\n                    </div>\n                </div>  \n                <div className=\"col-md-6 col-sm-6 col-xs-12\">\n                    <div className=\"single-input-field\">\n                    <input type=\"email\" placeholder=\"E-mail\" name=\"email\" required/>\n                    </div>\n                </div>                              \n                <div className=\"col-md-6 col-sm-6 col-xs-12\">\n                    <div className=\"single-input-field\">\n                    <input type=\"text\" placeholder=\"Phone Number\" name=\"phone\"/>\n                    </div>\n                </div>  \n                <div className=\"col-md-6 col-sm-6 col-xs-12\">\n                    <div className=\"single-input-field\">\n                    <input type=\"text\" placeholder=\"Subject\" name=\"subject\"/>\n                    </div>\n                </div>                \n                <div className=\"col-md-12 message-input\">\n                    <div className=\"single-input-field\">\n                    <textarea  placeholder=\"Write Your Message\" name=\"message\"></textarea>\n                    </div>\n                </div>                                                \n                <div className=\"single-input-fieldsbtn\">\n                    <input type=\"submit\" value=\"Send Now\"/>\n                </div>                          \n                </div>\n                </form>   \n            </div>      \n            </div>      \n        </div>\n        </div>\n    </section>\n        </div>\n        </>\n    )\n}","import React, { Fragment } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter, Route } from \"react-router-dom\";\n// import { Homepage } from './pages/Homepage';\nimport Pricing from './pages/Pricing';\nimport FileUpload from './components/FileUpload';\nimport DashboardPage from './pages/DashboardPage';\nimport { Login } from './pages/Login';\nimport { SignUp } from './pages/SignUp';\nimport Contact from './components/Contact';\n\ndeclare global {\n  interface Window {\n    token: any;\n  }\n}\n\nlet token = window.token;\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Fragment>\n          {/* <Route exact path=\"/\" component={Homepage} /> */}\n          <Route exact path=\"/Pricing\" component={Pricing} />\n          <Route exact path=\"/Apply\" component={FileUpload} />\n          <Route exact path=\"/Login\" component={Login} />\n          <Route exact path=\"/SignUp\" component={SignUp} />\n          <Route exact path=\"/DashboardPage\" component={DashboardPage} />\n          <Route exact path=\"/Contact\" component={Contact} />\n        </Fragment>\n      </BrowserRouter>\n    </div>\n  \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}