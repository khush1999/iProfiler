{"version":3,"sources":["components/banner.jpg","components/Banner.tsx","components/Footer.tsx","components/NavigationBar.tsx","pages/logo.png","pages/Homepage.tsx","pages/Pricing.tsx","components/Message.js","components/Progress.js","pages/Apply.tsx","components/FileUpload.js","components/Applicants.tsx","pages/DashboardPage.tsx","pages/Login.tsx","pages/SignUp.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["Styles","styled","div","banner","Banner","fluid","className","Container","Button","variant","Footer","href","NavigationBar","Navbar","expand","fixed","Brand","Toggle","aria-controls","Collapse","id","Nav","to","Link","Homepage","Row","Col","lg","src","logo","alt","width","height","Carousel","Item","Caption","Pricing","size","block","CardDeck","Card","Header","Body","Title","Text","Message","msg","role","type","data-dismiss","aria-label","aria-hidden","Progress","percentage","style","Apply","passData","fname","lname","email","phone","ug_University","pg_University","ugDegree","pgDegree","skills1","skills2","skills3","name","split","total_exp","university","degree","skills","useState","show","setShow","handleClose","Modal","onHide","closeButton","onClick","Form","action","method","encType","Group","as","controlId","Label","Control","placeholder","defaultValue","onChange","e","target","value","FileUpload","file","setFile","designition","data","setData","filename","setFilename","setUploadedFile","message","setMessage","uploadPercentage","setUploadPercentage","isLoading","setIsLoading","isForm","setIsForm","OnSubmit","a","preventDefault","formData","FormData","append","axios","post","headers","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","setTimeout","res","fileName","filePath","response","status","onSubmit","files","htmlFor","console","log","Applicants","backgroundColor","Subtitle","sm","DashboardPage","userData","setUserData","searchTerm","setSearchTerm","isSearched","setIsSearched","history","useHistory","handleClick","get","push","useEffect","then","fontSize","md","Dropdown","Menu","map","user","filter","city","divColor","mainWidth","Login","setEmail","password","setPassword","handleClick1","includes","SignUp","password1","setPassword1","password2","setPassword2","companyName","setCompanyName","column","window","token","App","exact","path","component","Boolean","location","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"js/main.e622f849.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"media/banner.ee286853.jpg\";","import React from 'react';\r\nimport { Jumbotron as Jumbo, Container, Row, Col, Button } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport banner from './banner.jpg';\r\nimport './banner.css';\r\n\r\nconst Styles = styled.div`\r\n  .jumbo {\r\n    background: url(${banner}) no-repeat fixed bottom;\r\n    background-size: cover;\r\n    color: #efefef;\r\n    height: 300px;\r\n    position: relative;\r\n    z-index: -2;\r\n    margin-bottom: 0;\r\n    \r\n  }\r\n  .overlay {\r\n    background-color: #000;\r\n    opacity: 0.6;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    z-index: -1;\r\n    \r\n  }\r\n`;\r\n\r\nexport const Banner = () => (\r\n  <Styles>\r\n    <Jumbo fluid className=\"jumbo mt-5\">\r\n      <div className=\"overlay\">\r\n        <Container className=\"main\">\r\n          <div className=\"des1\">\r\n            <h1>iProfiler</h1>\r\n            <p>Take the hassle out,</p>\r\n            <p>for the remote recruitment process</p>\r\n          </div>\r\n          <div>\r\n            <hr className=\"hr-style\" />\r\n            <p className=\"des2\">A profile filtering tool that helps selecting</p>\r\n            <p className=\"des2\">out relevant prospects from a pool of generic applications.</p>\r\n            <Button variant=\"info\" className=\"button\">Let's Hire {'>>'}</Button>{' '}\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    </Jumbo>\r\n  </Styles>\r\n)","import React from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport './footer.css';\r\n\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"text-center text-black main-footer\">\r\n            <div className=\"text-center p-3\">\r\n                © 2021 Copyright: {\" \"}\r\n          <a className=\"text-black\" href=\"#top\"> iProfiler.com</a>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport { Route, Switch, BrowserRouter as Router, Link } from 'react-router-dom';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\n\r\nconst Styles = styled.div`\r\n  .navbar {\r\n    background-color: #222;\r\n  }\r\n  a, .navbar-brand, .navbar-nav .nav-link {\r\n    color: #bbb;\r\n    &:hover {\r\n      color: white;\r\n    }\r\n  }\r\n  .navbar-light .navbar-nav .active>.nav-link, .navbar-light .navbar-nav .nav-link.active, \r\n  .navbar-light .navbar-nav .nav-link.show, .navbar-light .navbar-nav .show>.nav-link {\r\n    color: white;\r\n}\r\n.navbar-light .navbar-toggler {\r\n    color: white;\r\n    border-color: white;\r\n    background-color: gray;\r\n}\r\n`;\r\n\r\nexport const NavigationBar = () => {\r\n  return (\r\n    <Styles>\r\n      <Navbar expand=\"lg\" fixed=\"top\">\r\n        <Navbar.Brand href=\"/\">\r\n          iProfiler\r\n      </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"ml-auto\">\r\n            <LinkContainer to=\"/Pricing\">\r\n              <Nav.Link>Pricing</Nav.Link>\r\n            </LinkContainer>\r\n            <LinkContainer to=\"/Apply\">\r\n              <Nav.Link>Apply</Nav.Link>\r\n            </LinkContainer>\r\n            <LinkContainer to=\"/Login\">\r\n              <Nav.Link>Login</Nav.Link>\r\n            </LinkContainer>\r\n            <LinkContainer to=\"/Contact\">\r\n              <Nav.Link>Contact Us</Nav.Link>\r\n            </LinkContainer>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </Styles >\r\n  );\r\n};\r\n\r\n","export default __webpack_public_path__ + \"media/logo.dbf0fc2c.png\";","import React from \"react\";\r\nimport { Carousel, Col, Row } from \"react-bootstrap\";\r\nimport { Banner } from \"../components/Banner\";\r\nimport Footer from \"../components/Footer\";\r\nimport { NavigationBar } from \"../components/NavigationBar\";\r\nimport './homepage.css';\r\nimport logo from './logo.png';\r\n\r\nexport const Homepage = () => (\r\n  <main>\r\n    <NavigationBar />\r\n    <a id=\"top\"></a>\r\n    <Banner />\r\n    <br />\r\n    <Row className=\"main-content\">\r\n      <Col lg={5} className=\"icon\">\r\n        <img src={logo} alt=\"website-logo\" width=\"400\" height=\"400\" />\r\n      </Col>\r\n      <Col className=\"about\">\r\n        <p className=\"p-5\">\r\n          <br />\r\n          <h1>Why iProfiler?</h1>\r\n          <br />\r\n      It’s always a tedious task for HR to evaluate the hundreds of resumes/CVs incoming on every job posting. To filter based candidates out of the pool of them, iProfiler comes to the rescue.\r\nUsing AI resume parsing, these CVs could be categorized in just a few minutes.\r\nFIlters provided by the application would help HR to segregate hundreds of unwanted profiles of users and only relevant will be saved for the later stage.\r\n\tThus iProfiler is a handy tool for all HR representatives.\r\n</p>\r\n      </Col>\r\n    </Row>\r\n    <br />\r\n    <Carousel>\r\n      <Carousel.Item>\r\n        <Carousel.Caption className=\"Carousel-caption align-items-center justify-content-center\">\r\n          <Row className=\"caption-row\">\r\n            <Col className=\"discover1\">\r\n              <div className=\"heading\">\r\n                <br />\r\n                <h1>01</h1><br />\r\n                <h2>DISCOVER</h2>\r\n              </div>\r\n            </Col>\r\n            <Col className=\"sub-discover\">\r\n              <div className=\"sub-heading1\">DISCOVER</div>\r\n              <div className=\"content1\">\r\n                <h4>Find talent with a human machine collaboration</h4>\r\n              </div>\r\n              <div className=\"content2\">\r\n                <p className=\"text-justify\">Humans are innately creative whereas machines can generate data-centric insights.\r\n                  Iprofiler brings first of its kind talent intelligence to source, screen and assess candidates.</p>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Carousel.Caption>\r\n        <img\r\n          className=\"d-block w-100\"\r\n          src=\"https://cnet4.cbsistatic.com/img/bOyPv1h-UlqYl-el3hHcBa2WShc=/644x362/2017/03/14/e743e9be-1c54-4dd3-9583-248dd3e54e34/amp-placeholder.jpg\"\r\n          alt=\"First slide\" width=\"400\" height=\"400\"\r\n        />\r\n\r\n      </Carousel.Item>\r\n      <Carousel.Item>\r\n        <img\r\n          className=\"d-block w-100\"\r\n          src=\"https://cnet4.cbsistatic.com/img/bOyPv1h-UlqYl-el3hHcBa2WShc=/644x362/2017/03/14/e743e9be-1c54-4dd3-9583-248dd3e54e34/amp-placeholder.jpg\"\r\n          alt=\"Second slide\" width=\"400\" height=\"400\"\r\n        />\r\n\r\n        <Carousel.Caption className=\"Carousel-caption align-items-center justify-content-center\">\r\n          <Row className=\"caption-row\">\r\n            <Col className=\"discover2\">\r\n              <div className=\"heading\">\r\n                <br />\r\n                <h1>02</h1><br />\r\n                <h2>SHORTLISTING</h2>\r\n              </div>\r\n            </Col>\r\n            <Col className=\"sub-discover\">\r\n              <div className=\"sub-heading2\">SHORTLISTING</div>\r\n              <div className=\"content1\">\r\n                <h4>Profile shortlisting is an important process in recruitment.</h4>\r\n              </div>\r\n              <div className=\"content2\"><p className=\"text-justify\">With Iprofiler, more detailed profiling solution that helps to incorporate\r\n                qualitative and quantitative parameters.</p></div>\r\n            </Col>\r\n          </Row>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n      <Carousel.Item>\r\n        <img\r\n          className=\"d-block w-100\"\r\n          src=\"https://cnet4.cbsistatic.com/img/bOyPv1h-UlqYl-el3hHcBa2WShc=/644x362/2017/03/14/e743e9be-1c54-4dd3-9583-248dd3e54e34/amp-placeholder.jpg\"\r\n          alt=\"Third slide\" width=\"400\" height=\"400\"\r\n        />\r\n\r\n        <Carousel.Caption className=\"Carousel-caption align-items-center justify-content-center\">\r\n          <Row className=\"caption-row\">\r\n            <Col className=\"discover3\">\r\n              <div className=\"heading\">\r\n                <br />\r\n                <h1>03</h1><br />\r\n                <h2>STRUCTURE</h2>\r\n              </div>\r\n            </Col>\r\n            <Col className=\"sub-discover\">\r\n              <div className=\"sub-heading3\">STRUCTURE</div>\r\n              <div className=\"content1\">\r\n                <h4>Build a structured and efficient shortlisting process</h4>\r\n              </div>\r\n              <div className=\"content2\">\r\n                <p className=\"text-justify\">An efficient shortlisting process to keep track of talent pipeline and\r\n                   generate insightful candidate list all on the same platform.</p>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n    </Carousel>\r\n    <Footer />\r\n  </main>\r\n)","import React from \"react\";\r\nimport { Button, Card, CardDeck, OverlayTrigger } from \"react-bootstrap\";\r\nimport './price.css';\r\n\r\nconst Pricing = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"price-head\">\r\n        <h1>Choose Your Plan For AI Powered ATS</h1>\r\n        <br />\r\n        <p className=\"price-text\">We Know That COVID-19 Has Introduced New Challenges For Businesses.</p>\r\n        <p className=\"price-text\">So We Have Modified Our Pricing Plans To Help You And Your Business Adjust To These Changes.\r\n        </p>\r\n      </div>\r\n      <br />\r\n      <Button variant=\"primary\" size=\"lg\" block>\r\n        Free Trial\r\n      </Button>\r\n\r\n      <CardDeck className=\"price\">\r\n        <Card className=\"card\">\r\n          <Card.Header className=\"card-head\">\r\n            Basic\r\n            </Card.Header>\r\n          <Card.Body>\r\n            <Card.Title className=\"card-title\">Great for Companies That Want To Start Hiring</Card.Title>\r\n            <Card.Text className=\"card-text\">\r\n              <div className=\"amt\"><sup>$</sup> 59 /<sub>month</sub></div>\r\n              <div className=\"feat\">\r\n                All Features<br />\r\n            5 Active Jobs<br />\r\n            Unlimited Users\r\n            </div>\r\n            </Card.Text>\r\n            <br />\r\n            <Button variant=\"primary\" size=\"lg\" block>Get Started</Button>\r\n          </Card.Body>\r\n        </Card>\r\n        <Card className=\"card\">\r\n          <Card.Header className=\"card-head\">\r\n            Standard\r\n            </Card.Header>\r\n          <Card.Body>\r\n            <Card.Title className=\"card-title\">Great for growing startups and small businesses</Card.Title>\r\n            <Card.Text className=\"card-text\">\r\n              <div className=\"amt\"><sup>$</sup> 89 /<sub>month</sub></div>\r\n              <div className=\"feat\">\r\n                All Features<br />\r\n            10 Active Jobs<br />\r\n            Unlimited Users\r\n            </div>\r\n            </Card.Text>\r\n            <br />\r\n            <Button variant=\"primary\" size=\"lg\" block>Get Started</Button>\r\n          </Card.Body>\r\n        </Card>\r\n        <Card className=\"card\">\r\n          <Card.Header className=\"card-head\">\r\n            Pro\r\n            </Card.Header>\r\n          <Card.Body>\r\n            <Card.Title className=\"card-title\">Great for scaling up Small and Medium businesses </Card.Title>\r\n            <Card.Text className=\"card-text\">\r\n              <div className=\"amt\"><sup>$</sup> 149 /<sub>month</sub></div>\r\n              <div className=\"feat\">\r\n                All Features<br />\r\n            20 Active Jobs<br />\r\n            Unlimited Users\r\n            </div>\r\n            </Card.Text>\r\n            <br />\r\n            <Button variant=\"primary\" size=\"lg\" block>Get Started</Button>\r\n          </Card.Body>\r\n        </Card>\r\n      </CardDeck>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pricing;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Message = ({ msg }) => {\r\n  return (\r\n    <div className='alert alert-info alert-dismissible fade show' role='alert'>\r\n      {msg}\r\n      <button\r\n        type='button'\r\n        className='close'\r\n        data-dismiss='alert'\r\n        aria-label='Close'\r\n      >\r\n        <span aria-hidden='true'>&times;</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nMessage.propTypes = {\r\n  msg: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Message;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Progress = ({ percentage }) => {\r\n  return (\r\n    <div className='progress'>\r\n      <div\r\n        className='progress-bar progress-bar-striped bg-success'\r\n        role='progressbar'\r\n        style={{ width: `${percentage}%` }}\r\n      >\r\n        {percentage}%\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProgress.propTypes = {\r\n  percentage: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Progress;","import './apply.css';\r\nimport { Form, Col, Button, Modal } from \"react-bootstrap\";\r\nimport axios from 'axios';\r\n\r\nimport { useState } from 'react';\r\nimport { NavigationBar } from '../components/NavigationBar';\r\ninterface IForm {\r\n    email: string;\r\n    phone: string;\r\n    name: string;\r\n    total_exp: number;\r\n    university: string[];\r\n    designition: string[];\r\n    degree: string[];\r\n    skills: string[];\r\n    Companies_worked_at: string[];\r\n}\r\n\r\ntype TForm = {\r\n    passData: IForm,\r\n}\r\n\r\nconst Apply = ({ passData }: TForm) => {\r\n    let fname = \"\", lname = \"\", email = \"\", phone = \"\", total_exp = 0, ug_University = \"\", pg_University = \"\", ugDegree = \"\", pgDegree = \"\", skills1 = \"\", skills2 = \"\", skills3 = \"\";\r\n    if (passData != null) {\r\n        fname = passData.name.split(\" \")[0];\r\n        lname = passData.name.split(\" \")[1];\r\n        email = passData.email;\r\n        phone = passData.phone;\r\n        total_exp = passData.total_exp;\r\n        pg_University = passData.university[0];\r\n        ug_University = passData.university[1];\r\n        pgDegree = passData.degree[0];\r\n        ugDegree = passData.degree[1];\r\n        skills1 = passData.skills[0];\r\n        skills2 = passData.skills[1];\r\n        skills3 = passData.skills[2];\r\n    }\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const OnSubmit = async (jsondata) => {\r\n        if (jsondata != null) {\r\n            try {\r\n                console.log(jsondata)\r\n                const res = await axios.post(\"/create\", jsondata,\r\n                    {\r\n                        headers: {\r\n                            \"content_type\": \"application/json\",\r\n                        },\r\n                    }\r\n                );\r\n\r\n            }\r\n            catch (err) {\r\n                if (err.response.status === 500) {\r\n                    console.log('There was a problem with the server');\r\n                } else {\r\n                    console.log(err.response.data.msg);\r\n                }\r\n            }\r\n\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"main-form\">\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Modal heading</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Woohoo, Your Application has been submitted !!</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n          </Button>\r\n                    <Button variant=\"primary\" onClick={handleClose}>\r\n                        Save Changes\r\n          </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Form action=\"/create\" method=\"POST\"\r\n                encType=\"multipart/form-data\">\r\n\r\n                <br></br>\r\n                <h2>General Details</h2>\r\n                <br></br>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridFirstName\">\r\n                        <Form.Label>First Name</Form.Label>\r\n                        <Form.Control type=\"text\" id=\"fname\" name=\"fname\" placeholder=\"Enter First Name\" defaultValue={fname} onChange={(e) => fname = e.target.value} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formGridLastName\">\r\n                        <Form.Label>Last Name</Form.Label>\r\n                        <Form.Control type=\"text\" id=\"lname\" name=\"lname\" placeholder=\"Enter Last Name\" defaultValue={lname} onChange={(e) => lname = e.target.value} />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridDOB\">\r\n                        <Form.Label>Select DOB</Form.Label>\r\n                        <Form.Control type=\"date\" name=\"dob\" id=\"dob\" placeholder=\"Date of Birth\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" id=\"email\" name=\"email\" placeholder=\"Enter Email\" defaultValue={email} onChange={(e) => email = e.target.value} />\r\n                    </Form.Group>\r\n\r\n                </Form.Row>\r\n\r\n                <Form.Group controlId=\"formGridAddress\">\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control name=\"address\" id=\"address\" placeholder=\"1234 Main St\" />\r\n                </Form.Group>\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridCity\">\r\n                        <Form.Label>City</Form.Label>\r\n                        <Form.Control name=\"city\" id=\"city\" placeholder=\"Enter City\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formGridState\">\r\n                        <Form.Label>State</Form.Label>\r\n                        <Form.Control name=\"state\" id=\"state\" placeholder=\"Enter State\">\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formGridZip\">\r\n                        <Form.Label>Zip</Form.Label>\r\n                        <Form.Control name=\"zip\" id=\"zip\" placeholder=\"Enter 6 digit pincode\" />\r\n                    </Form.Group>\r\n\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n\r\n                    <Form.Group as={Col} controlId=\"formGridPhone1\">\r\n                        <Form.Label>Contact Number</Form.Label>\r\n                        <Form.Control id=\"phone1\" name=\"phone1\" placeholder=\"eg:- 932154XXXX\" defaultValue={phone} onChange={(e) => phone = e.target.value} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"Phone2\">\r\n                        <Form.Label>Alternate Contact Number</Form.Label>\r\n                        <Form.Control id=\"phone2\" name=\"phone2\" placeholder=\"eg:- 932154XXXX\" />\r\n                    </Form.Group>\r\n\r\n                </Form.Row>\r\n\r\n                <br></br>\r\n                <h2>Educational Details</h2>\r\n                <br></br>\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridPostGraduation\">\r\n                        <Form.Label>Post Graduation Course</Form.Label>\r\n                        <Form.Control type=\"text\" id=\"pgDegree\" name=\"pgDegree\" placeholder=\"Enter PG Course\" defaultValue={pgDegree} onChange={(e) => pgDegree = e.target.value} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formGridPGCollege\">\r\n                        <Form.Label>College</Form.Label>\r\n                        <Form.Control type=\"text\" id=\"pg_University\" name=\"pg_University\" placeholder=\"Enter PG College\" defaultValue={pg_University} onChange={(e) => pg_University = e.target.value} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formGridPGPercentage\">\r\n                        <Form.Label>Percentage</Form.Label>\r\n                        <Form.Control type=\"text\" id=\"pgPercentage\" name=\"pgPercentage\" placeholder=\"Enter PG Percentage\" />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridUnderGraduation\">\r\n                        <Form.Label>Under Graduation Course</Form.Label>\r\n                        <Form.Control type=\"text\" id=\"ugDegree\" name=\"ugDegree\" placeholder=\"Enter UG Course\" defaultValue={ugDegree} onChange={(e) => ugDegree = e.target.value} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formGridPGCollege\">\r\n                        <Form.Label>College</Form.Label>\r\n                        <Form.Control id=\"ug_University\" name=\"ug_University\" type=\"text\" placeholder=\"Enter UG College\" defaultValue={ug_University} onChange={(e) => ug_University = e.target.value} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formGridPGPercentage\">\r\n                        <Form.Label>Percentage</Form.Label>\r\n                        <Form.Control id=\"ugPercentage\" name=\"ugPercentage\" type=\"text\" placeholder=\"Enter UG Percentage\" />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <br></br>\r\n                <h2>Job Skills</h2>\r\n                <br></br>\r\n\r\n                <Form.Group controlId=\"formGridSkillDes\">\r\n                    <Form.Label>Skills Description</Form.Label>\r\n                    <Form.Control type=\"description\" placeholder=\"Write Description\" />\r\n                </Form.Group>\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridSkill1\">\r\n                        <Form.Label>Skill 1</Form.Label>\r\n                        <Form.Control type=\"text\" id=\"skills1\" name=\"skills1\" placeholder=\"Enter Skill\" defaultValue={skills1} onChange={(e) => skills1 = e.target.value} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formGridSkill2\">\r\n                        <Form.Label>Skill 2</Form.Label>\r\n                        <Form.Control type=\"text\" id=\"skills2\" name=\"skills2\" placeholder=\"Enter Skill\" defaultValue={skills2} onChange={(e) => skills2 = e.target.value} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formGridSkill3\">\r\n                        <Form.Label>Skill 3</Form.Label>\r\n                        <Form.Control type=\"text\" id=\"skills3\" name=\"skills3\" placeholder=\"Enter Skill\" defaultValue={skills3} onChange={(e) => skills3 = e.target.value} />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <input type='submit' value='Submit' className='btn btn-primary btn-block mt-4 mb-4'\r\n                    onClick={handleShow} />\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Apply;","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport Message from \"./Message\";\r\nimport Progress from \"./Progress\";\r\nimport axios from \"axios\";\r\nimport Apply from \"../pages/Apply\";\r\nimport \"./fileUpload.css\";\r\nimport { NavigationBar } from \"./NavigationBar\";\r\n\r\nconst FileUpload = () => {\r\n  const ip = {\r\n    email: \"\",\r\n    phone: \"\",\r\n    name: \"\",\r\n    total_exp: 0,\r\n    university: [],\r\n    designition: \"\",\r\n    degree: [],\r\n    skills: [],\r\n    \"Companies worked at\": [],\r\n  };\r\n  const [file, setFile] = useState(\"\");\r\n  const [data, setData] = useState(ip);\r\n  const [filename, setFilename] = useState(\"Choose File\");\r\n  const [uploadedFile, setUploadedFile] = useState({});\r\n  const [message, setMessage] = useState(\"\");\r\n  const [uploadPercentage, setUploadPercentage] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isForm, setIsForm] = useState(false);\r\n\r\n  const onChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n    setFilename(e.target.files[0].name);\r\n  };\r\n\r\n  let form;\r\n\r\n  const FormDisplay = () => {\r\n    setIsLoading(true);\r\n    setTimeout(() => {\r\n      setIsForm(true);\r\n      setIsLoading(false);\r\n    }, 10000);\r\n  }\r\n\r\n  const OnSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    try {\r\n      const res = await axios.post(\"/upload\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n        onUploadProgress: (progressEvent) => {\r\n          setUploadPercentage(\r\n            parseInt(\r\n              Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n            )\r\n          );\r\n\r\n          // Clear percentage\r\n          setTimeout(() => setUploadPercentage(0), 10000);\r\n        },\r\n      });\r\n\r\n      const { fileName, filePath } = res.data;\r\n\r\n      setUploadedFile({ fileName, filePath });\r\n      setData(res.data);\r\n      setMessage(\"File Uploaded\");\r\n    } catch (err) {\r\n      if (err.response.status === 500) {\r\n        setMessage(\"There was a problem with the server\");\r\n      } else {\r\n        setMessage(err.response.data.msg);\r\n      }\r\n    }\r\n    FormDisplay();\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <NavigationBar />\r\n      {message ? <Message msg={message} /> : null}\r\n      <form onSubmit={OnSubmit} className=\"mt-5 ml-5 mr-5\">\r\n        <h2>Resume Upload</h2>\r\n        <div className=\"custom-file mb-4\">\r\n          <br></br>\r\n          <input\r\n            type=\"file\"\r\n            className=\"custom-file-input\"\r\n            id=\"customFile\"\r\n            onChange={onChange}\r\n          />\r\n          <label className=\"custom-file-label\" htmlFor=\"customFile\">\r\n            {filename}\r\n          </label>\r\n        </div>\r\n\r\n        <Progress percentage={uploadPercentage} />\r\n\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Upload\"\r\n          className=\"btn btn-primary btn-block mt-4\"\r\n        />\r\n      </form>\r\n      {console.log(\"Value is =\", data)}\r\n      {isLoading ? <div className=\"load\"><img src=\"https://media.giphy.com/media/y1ZBcOGOOtlpC/giphy.gif\" /></div> : \" \"}\r\n      {isForm ? <Apply passData={data} /> : \" \"}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n","import React from \"react\";\r\nimport { Card, Button, Row, Col } from \"react-bootstrap\";\r\nimport { ArrowRight } from \"react-bootstrap-icons\";\r\nimport profile from '../assets/cardImage.png';\r\n\r\ninterface IForm {\r\n  email: string;\r\n  phone1: string;\r\n  phone2: string;\r\n  fname: string;\r\n  lname: string;\r\n  total_exp: number;\r\n  designition: string;\r\n  pgDegree: string;\r\n  ugDegree: string;\r\n  pg_University: string;\r\n  ug_University: string;\r\n  ugPercentage: string;\r\n  pgPercentage: string;\r\n  skills1: string;\r\n  skills2: string;\r\n  skills3: string;\r\n  Companies_worked_at: string[];\r\n  address: string;\r\n  dob: string;\r\n  city: string;\r\n  state: string;\r\n  zip: string;\r\n  resume: string;\r\n}\r\n\r\ntype TForm = {\r\n  passData: IForm,\r\n}\r\n\r\nconst Applicants = ({ passData }: TForm) => {\r\n  // console.log(passData);\r\n  return (\r\n    <Card style={{ width: '18rem', backgroundColor: \"#f8f8ff\" }} className=\"shadow p-3 mb-5 \r\n    bg-white rounded\">\r\n      <Card.Body>\r\n        <Card.Title className=\"text-left\">{passData.fname}{\" \"}{passData.lname}</Card.Title>\r\n        <hr />\r\n        <Card.Subtitle className=\"mb-2 text-muted\">{passData.ugDegree}{\" \"}{passData.pgDegree}\r\n        </Card.Subtitle>\r\n        <Card.Text className=\"text-left\">\r\n          <h6>Total Experience: {passData.total_exp}</h6>\r\n          <h6>Skills:</h6>\r\n          <ul>\r\n            <li>{passData.skills1}</li>\r\n            <li>{passData.skills2}</li>\r\n            <li>{passData.skills3}</li>\r\n          </ul>\r\n        </Card.Text>\r\n        <Row>\r\n          <Col sm={6}>\r\n            <Button variant=\"primary align-self-end\">View Profile</Button>\r\n          </Col>\r\n          <Col sm={6}>\r\n            <Button variant=\"primary align-self-end\">View Resume</Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Applicants;\r\n\r\n","import Applicant from '../components/Applicants';\r\nimport { Row, Col, Dropdown, Nav } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport './DashboardPage.css';\r\nimport { Search, Briefcase, House, Person, Filter, ChevronBarRight } from 'react-bootstrap-icons';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\ninterface IForm {\r\n    email: string;\r\n    phone1: string;\r\n    phone2: string;\r\n    fname: string;\r\n    lname: string;\r\n    total_exp: number;\r\n    designition: string;\r\n    pgDegree: string;\r\n    ugDegree: string;\r\n    pg_University: string;\r\n    ug_University: string;\r\n    ugPercentage: string;\r\n    pgPercentage: string;\r\n    skills1: string;\r\n    skills2: string;\r\n    skills3: string;\r\n    Companies_worked_at: string[];\r\n    address: string;\r\n    dob: string;\r\n    city: string;\r\n    state: string;\r\n    zip: string;\r\n    resume: string;\r\n}\r\n\r\nconst DashboardPage = () => {\r\n\r\n    const ip = {\r\n        \"email\": \"\", \"phone1\": \"\", \"phone2\": \"\", \"fname\": \"\", \"lname\": \"\", \"dob\": \"\",\r\n        \"total_exp\": 0, \"ug_University\": \"\", \"pg_University\": \"\",\r\n        \"designition\": \"\", \"ugDegree\": \"\", \"pgDegree\": \"\", \"pgPercentage\": \"\", \"ugPercentage\": \"\",\r\n        \"skills1\": \"\", \"skills2\": \"\", \"skills3\": \"\",\r\n        \"Companies_worked_at\": [], \"address\": \"\", \"city\": \"\", \"state\": \"\", \"zip\": \"\", \"resume\": \"\"\r\n    }\r\n\r\n    const [userData, setUserData] = useState(false);\r\n    const [data, setData] = useState([ip]);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [isSearched, setIsSearched] = useState(false);\r\n    const [message, setMessage] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    function GetData() {\r\n\r\n        useEffect(() => {\r\n            if (userData == false) {\r\n                axios.get(\"/getData\")\r\n                    .then(res => {\r\n                        console.log(\"////////////////////////////////////\", res.data);\r\n                        setData(res.data);\r\n                        setUserData(true);\r\n                    })\r\n            }\r\n            else {\r\n                setIsSearched(!setIsSearched)\r\n            }\r\n        }, [data]);\r\n\r\n    }\r\n    const handleClick = async (e) => {\r\n        e.preventDefault();\r\n        // const formData = new FormData();\r\n        // formData.append(\"email\", email);\r\n        // formData.append(\"password\", password);\r\n        try {\r\n            const res = await axios.get('/logout');\r\n            console.log(\"$$$$$$$$$$$$$$$$$$$$$$\")\r\n            console.log(res.data);\r\n            if (res.data === \"EmailID\") {\r\n                history.push('/Login');\r\n            }\r\n\r\n        } catch (err) {\r\n            if (err.response.status == 500) {\r\n                setMessage(\"There was a problem with the server\");\r\n            } else {\r\n                setMessage(err.response.data.msg);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {GetData()}\r\n            <div className=\"main-dashboard\">\r\n                <div className=\"sidebar\">\r\n                    <div className=\"sidebar-head\">\r\n                        <h3>iProfiler</h3>\r\n                    </div>\r\n                    <a href=\"/\"><i className=\"fa fa-fw fa-home pr-2\" style={{ fontSize: '1.75em' }} />\r\n                    Home</a>\r\n                    <a className=\"active\" href=\"#\"><i className=\"fa fa-fw fa-user pr-2\"\r\n                        style={{ fontSize: '1.75em' }} />\r\n                        Applicants</a>\r\n                    <a href=\"#\"><i className=\"fa fa-fw fa-briefcase pr-2\" style={{ fontSize: '1.75em' }} />\r\n                    Job Postings</a>\r\n                    <a href=\"#\" onClick={handleClick}><i className=\"fa fa-fw fa-power-off pr-2\" style={{ fontSize: '1.75em' }} />\r\n                    Logout</a>\r\n                </div>\r\n\r\n                <div className=\"content\">\r\n\r\n                    <h4 className=\"mt-2 ml-2\">Displaying Applicants</h4>\r\n\r\n                    <div className=\"filter\">\r\n                        <Row className=\"filter-row\">\r\n                            <Col md={5} className=\"dashboard-filters\">\r\n                                <Dropdown>\r\n                                    <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\r\n                                        Skills\r\n                                    </Dropdown.Toggle>\r\n\r\n                                    <Dropdown.Menu>\r\n                                        <Dropdown.Item href=\"#\">Java</Dropdown.Item>\r\n                                        <Dropdown.Item href=\"#\">Python</Dropdown.Item>\r\n                                        <Dropdown.Item href=\"#\">Django</Dropdown.Item>\r\n                                        <Dropdown.Item href=\"#\">C/C++</Dropdown.Item>\r\n                                        <Dropdown.Item href=\"#\">React</Dropdown.Item>\r\n                                    </Dropdown.Menu>\r\n                                </Dropdown>\r\n                                <Dropdown>\r\n                                    <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\r\n                                        Experience\r\n                                    </Dropdown.Toggle>\r\n\r\n                                    <Dropdown.Menu>\r\n                                        <Dropdown.Item href=\"#\">0-3 Years</Dropdown.Item>\r\n                                        <Dropdown.Item href=\"#\">3-6 Years</Dropdown.Item>\r\n                                        <Dropdown.Item href=\"#\">6-9 Years</Dropdown.Item>\r\n                                        <Dropdown.Item href=\"#\">{\">\"}9 Years</Dropdown.Item>\r\n                                    </Dropdown.Menu>\r\n                                </Dropdown>\r\n\r\n                                <Dropdown>\r\n                                    <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\r\n                                        Designation\r\n                                    </Dropdown.Toggle>\r\n\r\n                                    <Dropdown.Menu>\r\n                                        <Dropdown.Item href=\"#\">SDE</Dropdown.Item>\r\n                                        <Dropdown.Item href=\"#\">SDET</Dropdown.Item>\r\n                                        <Dropdown.Item href=\"#\">HR</Dropdown.Item>\r\n                                        <Dropdown.Item href=\"#\">DevOps</Dropdown.Item>\r\n                                    </Dropdown.Menu>\r\n                                </Dropdown>\r\n                            </Col>\r\n                            <Col md={7} className=\"pr-0\">\r\n                                <div className=\"search mr-0\">\r\n                                    <input type=\"search\" name=\"search\" id=\"\" placeholder=\"Search Applicant by Name\"\r\n                                        className=\"search-input\" onChange={(e) => {\r\n                                            setIsSearched(!isSearched);\r\n                                            setSearchTerm(e.target.value)\r\n                                        }} />\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                    <div className=\"grid-container justify-content-around\">\r\n                        {!isSearched && userData && data.map(user =>\r\n                            <Applicant passData={user} />\r\n                        )}\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"grid-container justify-content-around\">\r\n                        {\r\n                            userData && isSearched && data.filter(user => (user.fname == searchTerm ||\r\n                                user.lname == searchTerm || user.city == searchTerm || user.designition\r\n                                == searchTerm)).map((user) => (\r\n\r\n                                    <Applicant passData={user} />\r\n\r\n                                ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default DashboardPage;\r\n","import axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport { Button, Container, Row, Col, Form } from 'react-bootstrap';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { NavigationBar } from '../components/NavigationBar';\r\n\r\n\r\nconst divColor = { backgroundColor: '#cce7ff' };\r\nconst mainWidth = { width: \"60%\" };\r\n\r\nexport const Login = () => {\r\n\r\n    const [email, setEmail] = useState('Email')\r\n    const [password, setPassword] = useState('Password')\r\n    const [message, setMessage] = useState('')\r\n    const history = useHistory();\r\n    const handleClick = () => history.push('/Pricing');\r\n    const handleClick1 = async (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append(\"email\", email);\r\n        formData.append(\"password\", password);\r\n        try {\r\n            const res = await axios.post(\"/login\", formData, {\r\n                headers: {\r\n                    \"Content-Type\": \"multipart/form-data\",\r\n                }\r\n            });\r\n            console.log(\"*****************************\")\r\n            console.log(res.data);\r\n            if (res.data.includes('@gmail.com')) {\r\n                history.push('/DashboardPage');\r\n            }\r\n\r\n        } catch (err) {\r\n            if (err.response.status === 500) {\r\n                setMessage(\"There was a problem with the server\");\r\n            } else {\r\n                setMessage(err.response.data.msg);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <NavigationBar />\r\n            <Container style={mainWidth} className=\"mt-5 text-center shadow-sm p-3 mb-5 bg-white rounde\">\r\n                <Row>\r\n                    <Col sm={5} style={divColor} className=\"text-dark p-3\">\r\n                        <div>\r\n                            <br /> <br /><br />\r\n                            <p>All - in - one Recruitment Solutions</p>\r\n                            <p>Best Hiring Platform</p>\r\n                            <br /> <br /><br /><br />\r\n                        </div>\r\n                        <div>\r\n                            <p>Reduce Your Hiring Cost With Us !</p>\r\n                            <p>Choose Your Plan & Start Hiring Now</p>\r\n                            <br />\r\n                            <Button variant=\"dark\" onClick={handleClick}>Buy Now {'>>'}</Button> {' '}\r\n                            <br /> <br />\r\n                        </div>\r\n                    </Col>\r\n                    <Col sm={7} className=\"bg-light text-dark p-3\">\r\n                        <br />\r\n                        <h2>Employer Login</h2>\r\n                        <br /><br />\r\n                        <Form action=\"/login\" method=\"POST\">\r\n                            <Form.Group controlId=\"loginEmail\">\r\n                                <Form.Control type=\"email\" id=\"email\" name=\"email\" placeholder={email} onChange={(e) => setEmail(e.target.value)} />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"loginPassword\">\r\n                                <Form.Control type=\"password\" id=\"password\" name=\"password\" placeholder={password} onChange={(e) => setPassword(e.target.value)} />\r\n                            </Form.Group>\r\n\r\n                            <Button variant=\"primary\" size=\"lg\" block type=\"submit\" onClick={handleClick1}>\r\n                                Login\r\n                        </Button>\r\n                        </Form>\r\n                        <br /><br />\r\n                        <hr />\r\n                        <p>New Client ?{\" \"}<Link to=\"/SignUp\">Sign Up</Link></p>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\n","import axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport { Button, Container, Row, Col, Form } from 'react-bootstrap';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { NavigationBar } from '../components/NavigationBar';\r\n\r\nconst mainWidth = { width: \"60%\" };\r\n\r\nexport const SignUp = () => {\r\n    const [email, setEmail] = useState('')\r\n    const [password1, setPassword1] = useState('')\r\n    const [password2, setPassword2] = useState('')\r\n    const [companyName, setCompanyName] = useState('')\r\n    const [message, setMessage] = useState('')\r\n    const history = useHistory();\r\n\r\n    const handleClick = async (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append(\"email\", email);\r\n        formData.append(\"password1\", password1);\r\n        formData.append(\"password2\", password2);\r\n        formData.append(\"company_name\", companyName);\r\n\r\n        try {\r\n            const res = await axios.post(\"/auth\", formData, {\r\n                headers: {\r\n                    \"Content-Type\": \"multipart/form-data\",\r\n                }\r\n            });\r\n            console.log(\"^^^^^^^^^^^^^^^^^^^\")\r\n            console.log(res.data);\r\n            if (res.data === \"You are Logged in!!!!\") {\r\n                history.push('/Login');\r\n            }\r\n\r\n        } catch (err) {\r\n            if (err.response.status == 500) {\r\n                setMessage(\"There was a problem with the server\");\r\n            } else {\r\n                setMessage(err.response.data.msg);\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <NavigationBar />\r\n            <Container style={mainWidth} className=\"mt-5 bg-light text-dark shadow-sm p-3 mb-5 bg-white rounde\">\r\n                <h3 className=\"text-center\">Join Us To Hire !</h3>\r\n                <br />\r\n                <Form action=\"/auth\" method=\"POST\">\r\n                    <Form.Group as={Row} controlId=\"SignUpEmail\">\r\n                        <Form.Label column sm={4}>\r\n                            Company Name\r\n                    </Form.Label>\r\n                        <Col sm={8}>\r\n                            <Form.Control type=\"text\" placeholder={companyName} id=\"company_name\" name=\"company_name\" onChange={(e) => setCompanyName(e.target.value)} />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"SignUpEmail\">\r\n                        <Form.Label column sm={4}>\r\n                            Company Email\r\n                    </Form.Label>\r\n                        <Col sm={8}>\r\n                            <Form.Control type=\"email\" placeholder={email} id=\"email\" name=\"email\" onChange={(e) => setEmail(e.target.value)} />\r\n                        </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row} controlId=\"formHorizontalPassword\">\r\n                        <Form.Label column sm={4}>\r\n                            Password\r\n                    </Form.Label>\r\n                        <Col sm={8}>\r\n                            <Form.Control type=\"password\" placeholder={password1} id=\"password1\" name=\"password1\" onChange={(e) => setPassword1(e.target.value)} />\r\n                        </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row} controlId=\"formHorizontalPassword\">\r\n                        <Form.Label column sm={4}>\r\n                            Confirm Password\r\n                    </Form.Label>\r\n                        <Col sm={8}>\r\n                            <Form.Control type=\"password\" placeholder={password2} id=\"password2\" name=\"password2\" onChange={(e) => setPassword2(e.target.value)} />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    {/* <input type='submit' value='Submit' className='btn btn-primary btn-block mt-4'/> */}\r\n                    <Button variant=\"primary\" size=\"lg\" block type=\"submit\" onClick={handleClick}> Sign in </Button>\r\n                </Form>\r\n                <br />\r\n                <hr />\r\n                <p className=\"text-center\">Already a User ?{\" \"}<Link to=\"/Login\">Login Now</Link></p>\r\n            </Container>\r\n        </>\r\n    )\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport { Homepage } from './pages/Homepage';\r\nimport Pricing from './pages/Pricing';\r\nimport FileUpload from './components/FileUpload';\r\nimport DashboardPage from './pages/DashboardPage';\r\nimport { Login } from './pages/Login';\r\nimport { SignUp } from './pages/SignUp';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    token: any;\r\n  }\r\n}\r\n\r\nlet token = window.token;\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter>\r\n        <Fragment>\r\n          <Route exact path=\"/\" component={Homepage} />\r\n          <Route exact path=\"/Pricing\" component={Pricing} />\r\n          <Route exact path=\"/Apply\" component={FileUpload} />\r\n          <Route exact path=\"/Login\" component={Login} />\r\n          <Route exact path=\"/SignUp\" component={SignUp} />\r\n          <Route exact path=\"/DashboardPage\" component={DashboardPage} />\r\n        </Fragment>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}